.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_source_auto_examples_plotting_plot_ppi_sigmet.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_source_auto_examples_plotting_plot_ppi_sigmet.py:


====================================
Create a PPI plot from a Sigmet file
====================================

An example which creates a PPI plot of a Sigmet file.



.. image:: /source/auto_examples/plotting/images/sphx_glr_plot_ppi_sigmet_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    /home/zsherman/dev/pyart/examples/plotting/plot_ppi_sigmet.py:27: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
      plt.show()






|


.. code-block:: default

    print(__doc__)

    # Author: Jonathan J. Helmus (jhelmus@anl.gov)
    # License: BSD 3 clause

    import matplotlib.pyplot as plt
    import pyart

    filename = 'XSW110520105408.RAW7HHF'

    # create the plot using RadarDisplay (recommended method)
    radar = pyart.io.read_rsl(filename)
    display = pyart.graph.RadarDisplay(radar)
    fig = plt.figure()
    ax = fig.add_subplot(111)
    display.plot('reflectivity', 0, vmin=-32, vmax=64.)
    display.plot_range_rings([10, 20, 30, 40])
    display.plot_cross_hair(5.)
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  5.974 seconds)


.. _sphx_glr_download_source_auto_examples_plotting_plot_ppi_sigmet.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_ppi_sigmet.py <plot_ppi_sigmet.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_ppi_sigmet.ipynb <plot_ppi_sigmet.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
