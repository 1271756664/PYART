.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_source_auto_examples_plotting_plot_ppi_with_rings.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_source_auto_examples_plotting_plot_ppi_with_rings.py:


==================================
Create a PPI plot on a cartopy map
==================================

An example which creates a PPI plot of a file with a cartopy background
and range rings



.. image:: /source/auto_examples/plotting/images/sphx_glr_plot_ppi_with_rings_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    /home/zsherman/anaconda3/envs/pyart_env/lib/python3.8/site-packages/cartopy/mpl/geoaxes.py:782: MatplotlibDeprecationWarning: Passing the minor parameter of set_xticks() positionally is deprecated since Matplotlib 3.2; the parameter will become keyword-only two minor releases later.
      return super(GeoAxes, self).set_xticks(xticks, minor)
    /home/zsherman/anaconda3/envs/pyart_env/lib/python3.8/site-packages/cartopy/mpl/geoaxes.py:829: MatplotlibDeprecationWarning: Passing the minor parameter of set_yticks() positionally is deprecated since Matplotlib 3.2; the parameter will become keyword-only two minor releases later.
      return super(GeoAxes, self).set_yticks(yticks, minor)
    /home/zsherman/dev/pyart/examples/plotting/plot_ppi_with_rings.py:53: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
      plt.show()






|


.. code-block:: default


    print(__doc__)

    #Author: Jason Hemedinger
    #License: BSD 3 clause

    import numpy as np
    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs
    import pyart

    # Read in the file, create a RadarMapDisplay object
    filename = 'nsaxsaprppiC1.a1.20140201.184802.nc'
    radar = pyart.io.read(filename)
    display = pyart.graph.RadarMapDisplay(radar)

    # Setting projection and ploting the second tilt
    projection = ccrs.LambertConformal(central_latitude=radar.latitude['data'][0],
                                       central_longitude=radar.longitude['data'][0])

    fig = plt.figure(figsize=(6,6))
    display.plot_ppi_map('reflectivity_horizontal', 1, vmin=-20, vmax=20,
                         min_lon=-157.1, max_lon=-156, min_lat=71.2, max_lat=71.6,
                         lon_lines=np.arange(-158, -154, .2), resolution='10m',
                         lat_lines=np.arange(69, 72, .1), projection=projection,
                         fig=fig, lat_0=radar.latitude['data'][0],
                         lon_0=radar.longitude['data'][0])

    # Plot range rings at 10, 20, 30, 40km
    display.plot_range_ring(10., line_style='k-')
    display.plot_range_ring(20., line_style='k--')
    display.plot_range_ring(30., line_style='k-')
    display.plot_range_ring(40., line_style='k--')

    # Plot cross hairs
    display.plot_line_xy(np.array([-40000.0, 40000.0]), np.array([0.0, 0.0]),
                         line_style='k-')
    display.plot_line_xy(np.array([0.0, 0.0]), np.array([-20000.0, 200000.0]),
                         line_style='k-')

    # Indicate the radar location with a point
    display.plot_point(radar.longitude['data'][0], radar.latitude['data'][0])

    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  5.411 seconds)


.. _sphx_glr_download_source_auto_examples_plotting_plot_ppi_with_rings.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_ppi_with_rings.py <plot_ppi_with_rings.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_ppi_with_rings.ipynb <plot_ppi_with_rings.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
