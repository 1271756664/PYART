.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_source_auto_examples_mapping_plot_map_two_radars_to_grid.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_source_auto_examples_mapping_plot_map_two_radars_to_grid.py:


==================================
Map two radars to a Cartesian grid
==================================

Map the reflectivity field of two nearby ARM XSARP radars from antenna
coordinates to a Cartesian grid.



.. image:: /source/auto_examples/mapping/images/sphx_glr_plot_map_two_radars_to_grid_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    /home/zsherman/dev/pyart/pyart/io/cfradial.py:365: RuntimeWarning: invalid value encountered in less
      data = self.ncvar[:]
    /home/zsherman/dev/pyart/pyart/io/cfradial.py:365: RuntimeWarning: invalid value encountered in greater
      data = self.ncvar[:]
    /home/zsherman/dev/pyart/pyart/map/gates_to_grid.py:160: DeprecationWarning: Barnes weighting function is deprecated. Please use Barnes 2 to be consistent with Pauley and Wu 1990.
      warnings.warn("Barnes weighting function is deprecated."
    /home/zsherman/dev/pyart/examples/mapping/plot_map_two_radars_to_grid.py:45: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
      plt.show()






|


.. code-block:: default

    print(__doc__)

    # Author: Jonathan J. Helmus (jhelmus@anl.gov)
    # License: BSD 3 clause

    import matplotlib.pyplot as plt
    import pyart

    # read in the data from both XSAPR radars
    XSAPR_SW_FILE = 'swx_20120520_0641.nc'
    XSAPR_SE_FILE = 'sex_20120520_0641.nc'
    radar_sw = pyart.io.read_cfradial(XSAPR_SW_FILE)
    radar_se = pyart.io.read_cfradial(XSAPR_SE_FILE)

    # filter out gates with reflectivity > 100 from both radars
    gatefilter_se = pyart.filters.GateFilter(radar_se)
    gatefilter_se.exclude_transition()
    gatefilter_se.exclude_above('corrected_reflectivity_horizontal', 100)
    gatefilter_sw = pyart.filters.GateFilter(radar_sw)
    gatefilter_sw.exclude_transition()
    gatefilter_sw.exclude_above('corrected_reflectivity_horizontal', 100)

    # perform Cartesian mapping, limit to the reflectivity field.
    grid = pyart.map.grid_from_radars(
        (radar_se, radar_sw), gatefilters=(gatefilter_se, gatefilter_sw),
        grid_shape=(1, 201, 201),
        grid_limits=((1000, 1000), (-50000, 40000), (-60000, 40000)),
        grid_origin = (36.57861, -97.363611),
        fields=['corrected_reflectivity_horizontal'])

    # create the plot
    fig = plt.figure()
    ax = fig.add_subplot(111)
    ax.imshow(grid.fields['corrected_reflectivity_horizontal']['data'][0],
              origin='lower', extent=(-60, 40, -50, 40), vmin=0, vmax=48)
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  13.106 seconds)


.. _sphx_glr_download_source_auto_examples_mapping_plot_map_two_radars_to_grid.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_map_two_radars_to_grid.py <plot_map_two_radars_to_grid.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_map_two_radars_to_grid.ipynb <plot_map_two_radars_to_grid.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
