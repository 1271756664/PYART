.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_source_auto_examples_mapping_plot_map_one_radar_to_grid.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_source_auto_examples_mapping_plot_map_one_radar_to_grid.py:


======================================
Map a single radar to a Cartesian grid
======================================

Map the reflectivity field of a single radar from Antenna coordinates to a
Cartesian grid.



.. image:: /source/auto_examples/mapping/images/sphx_glr_plot_map_one_radar_to_grid_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    /home/zsherman/dev/pyart/pyart/map/gates_to_grid.py:162: DeprecationWarning: Barnes weighting function is deprecated. Please use Barnes 2 to be consistent with Pauley and Wu 1990.
      " Pauley and Wu 1990.", DeprecationWarning)
    /home/zsherman/dev/pyart/examples/mapping/plot_map_one_radar_to_grid.py:42: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
      plt.show()






|


.. code-block:: default

    print(__doc__)

    # Author: Jonathan J. Helmus (jhelmus@anl.gov)
    # License: BSD 3 clause

    import numpy as np
    import matplotlib.pyplot as plt
    import pyart

    # read in the data
    RADAR_FILE = '110635.mdv'
    radar = pyart.io.read_mdv(RADAR_FILE)

    # mask out last 10 gates of each ray, this removes the "ring" around th radar.
    radar.fields['reflectivity']['data'][:, -10:] = np.ma.masked

    # exclude masked gates from the gridding
    gatefilter = pyart.filters.GateFilter(radar)
    gatefilter.exclude_transition()
    gatefilter.exclude_masked('reflectivity')

    # perform Cartesian mapping, limit to the reflectivity field.
    grid = pyart.map.grid_from_radars(
        (radar,), gatefilters=(gatefilter, ),
        grid_shape=(1, 241, 241),
        grid_limits=((2000, 2000), (-123000.0, 123000.0), (-123000.0, 123000.0)),
        fields=['reflectivity'])

    # create the plot
    fig = plt.figure()
    ax = fig.add_subplot(111)
    ax.imshow(grid.fields['reflectivity']['data'][0], origin='lower')
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.825 seconds)


.. _sphx_glr_download_source_auto_examples_mapping_plot_map_one_radar_to_grid.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_map_one_radar_to_grid.py <plot_map_one_radar_to_grid.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_map_one_radar_to_grid.ipynb <plot_map_one_radar_to_grid.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
